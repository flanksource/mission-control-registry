{{- if and .Values.playbooks.enabled .Values.playbooks.edit_kubernetes_manifests.enabled }}
---
apiVersion: mission-control.flanksource.com/v1
kind: Playbook
metadata:
  name: request-namespace-access-gitops
spec:
  configs:
    - types:
        - Kubernetes::Namespace
      labelSelector: 'kustomize.toolkit.fluxcd.io/name' # limits to namespaces created by flux
  title: Request Namespace Access (GitOps)
  category: Kubernetes
  icon: add-shield
  description: Adds a Rolebinding to the given role in the selected Namespace
  parameters:
    - name: user
      label: Role Subject User
      default: '$(.user.email)'
    - name: delay
      label: Expires after
      type: list
      properties:
        options:
          - label: "4 hours"
            value: '4h'
          - label: "8 hours"
            value: '8h'
          - label: "3 days"
            value: "3d"
          - label: "10 days"
            value: "10d"
          - label: "2 weeks"
            value: "14d"
          - label: "30 days"
            value: "30d"
          - label: "Indefinitely"
            value: "0"
    - name: role
      label: Role
      type: config
      properties:
        filter:
          - types:
              - Kubernetes::ClusterRole
  actions:
    - name: Create RoleBinding
      gitops:
        repo:
          url: '$(.env.git.url)'
          connection: "{{.Values.playbooks.edit_kubernetes_manifests.git_connection}}"
          base: '$(.env.git.branch)'
          branch: 'grant-namespace-access-$(.run.id)'
        commit:
          email: '$(.user.email)'
          author: '$(.user.name)'
          message: 'chore(rbac): grant $(.params.user) $(.params.role.name) on $(.config.name)'
        pr:
          title: 'Grant $(.params.user) $(.params.role.name) on $(.config.name)'
        patches:
          - path: {{ "'{{" }} filepath.Join (filepath.Dir (filepath.Join .env.kustomize.path .env.git.file)) "kustomization.yaml" {{ "}}'" }}
            yq: .resources += "rolebinding-$(.config.name)-$(run.id).yaml"
        files:
          - path: {{ "'{{" }} filepath.Join (filepath.Dir (filepath.Join .env.kustomize.path .env.git.file)) "rolebinding-$(.config.name)-$(run.id).yaml" {{ "}}'" }}
            content: |
              apiVersion: rbac.authorization.k8s.io/v1
              kind: RoleBinding
              metadata:
                name: "$(.params.role.name)-$(.run.id)"
                namespace: "$(.config.name)"
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: Role
                name: $(.params.role.name)
              subjects:
                - apiGroup: rbac.authorization.k8s.io
                  kind: User
                  name: $(.params.user)
    - name: Clear Rolebinding
      if: 'success() && .params.delay != "0"'
      delay: '.params.delay'
      gitops:
        repo:
          url: '$(.env.git.url)'
          connection: "{{.Values.playbooks.edit_kubernetes_manifests.git_connection}}"
          base: '$(.env.git.branch)'
          branch: 'revoke-namespace-access-$(.run.id)'
        commit:
          email: '$(.user.email)'
          author: '$(.user.name)'
          message: 'chore(rbac): revoke $(.params.user) $(.params.role.name) on $(.config.name)'
        pr:
          title: 'Revoke $(.params.user) $(.params.role.name) on $(.config.name)'
        patches:
          - path: {{ "'{{" }} filepath.Join (filepath.Dir (filepath.Join .env.kustomize.path .env.git.file)) "kustomization.yaml" {{ "}}'" }}
            yq: .resources -= "del(.resources[] | select(. == "rolebinding-$(.config.name).yaml"))'"
        files:
          - path: '$(.env.kustomize.path)/rolebinding-$(.config.name)-$(run.id).yaml'
            content: '$delete'
{{- end}}