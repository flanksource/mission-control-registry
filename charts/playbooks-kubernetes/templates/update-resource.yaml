# yaml-language-server: $schema=https://raw.githubusercontent.com/flanksource/duty/main/schema/openapi/playbook.schema.json

{{ if and .Values.playbooks.enabled .Values.playbooks.updateResources }}
apiVersion: mission-control.flanksource.com/v1
kind: Playbook
metadata:
  name: kubernetes-update-resources
spec:
  title: Update Resources
  icon: scale-up
  category: Kubernetes
  description: Updates resource requests/limits using kubectl set resources
  configs:
    - agent: all
      types:
        - Kubernetes::Deployment
        - Kubernetes::StatefulSet
        - Kubernetes::DaemonSet
  parameters:
  - name: cpu_request
    label: CPU
    properties:
      colSpan: 4
    type: millicores
    default: '$(  .config.config | jq ".spec.template.spec.containers[0].resources.requests.cpu" | default "" )'
  - name: cpu_limit
    properties:
      colSpan: 4
    label: Limit
    type: millicores
    default: '$(  .config.config | jq ".spec.template.spec.containers[0].resources.limits.cpu" | default "")'
  - name: memory_request
    label: Memory
    properties:
      colSpan: 4
    type: bytes

    default: '$(  .config.config | jq ".spec.template.spec.containers[0].resources.requests.memory" | default "" )'
  - name: memory_limit
    label: Memory Limit
    properties:
      colSpan: 4
    type: bytes
    default: '$(  .config.config | jq ".spec.template.spec.containers[0].resources.limits.memory" | default "")'

  runsOn:
    -  {{` "{{- if .agent }}{{.agent.id}}{{ else }}local{{ end }}" `}}

  actions:
    - name: kubectl set resources
      exec:
        {{- include "exec-action-connections" . | nindent 8}}
        script: |
          cmd="kubectl set resources -v=2 $(.config.config_class | strings.ToLower) $(.config.name) -n $(.config.tags.namespace) --containers=$( .config.config | jq ".spec.template.spec.containers[0].name" )"

          if [[ -n "$(params.cpu_request  | default "")" ]]; then
            $cmd --requests=cpu=$(params.cpu_request | default "")
          fi
          if [[ -n "$(params.memory_request  | default "")" ]]; then
            $cmd --requests=memory=$(params.memory_request | default "")
          fi
          if [[ -n "$(params.cpu_limit  | default "")" ]]; then
            $cmd --limits=cpu=$(params.cpu_limit | default "")
          fi
          if [[ -n "$(params.memory_limit  | default "")" ]]; then
             $cmd --limits=memory=$(params.memory_limit | default "")
          fi
{{- end}}
