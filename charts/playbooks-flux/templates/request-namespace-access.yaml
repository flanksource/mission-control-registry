{{- if .Values.playbooks.requestNamespaceAccess }}
apiVersion: mission-control.flanksource.com/v1
kind: Playbook
metadata:
  name: flux-request-namespace-access
spec:
  configs:
    # limited to namespaces created by flux
    - types:
        - Kubernetes::Namespace
      labelSelector: 'kustomize.toolkit.fluxcd.io/name'
  title: Request Namespace Access
  category: Flux
  icon: k8s-namespace
  description: Grants a user access to a GitOps managed namespace by creating a RoleBinding and pushing it to Git, optionally removing it after a period of time
  parameters:
    - name: user
      label: Role Subject User
      default: '$(.user.email)'
    - name: delay
      label: Expires after
      type: list
      properties:
        options:
          - label: "4 hours"
            value: '4h'
          - label: "8 hours"
            value: '8h'
          - label: "3 days"
            value: "3d"
          - label: "10 days"
            value: "10d"
          - label: "2 weeks"
            value: "14d"
          - label: "30 days"
            value: "30d"
          - label: "Indefinitely"
            value: "0"
    - name: role
      label: Role
      type: config
      properties:
        filter:
          - types:
              - Kubernetes::ClusterRole
  actions:
    - name: Create RoleBinding
      gitops:
        repo:
          {{ include "git-origin" . | nindent 10}}
          branch: 'grant-namespace-access-$(.run.id)'
        commit:
          email: '$(.user.email)'
          author: '$(.user.name)'
          message: 'chore(rbac): grant $(.params.user) $(.params.role.name) on $(.config.name)'
        {{ include "git-pr" (list . "Grant $(.params.user) $(.params.role.name) on $(.config.name)" ) | nindent 8}}
        patches:
          - path: $(.git.kustomize.file)
            yq: .resources += "rolebinding-$(.config.name)-$(run.id).yaml"
        files:
          - path: '$(.git.kustomize.path)/rolebinding-$(.config.name)-$(run.id).yaml'
            content: |
              apiVersion: rbac.authorization.k8s.io/v1
              kind: RoleBinding
              metadata:
                name: "$(.params.role.name)-$(.run.id)"
                namespace: "$(.config.name)"
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: ClusterRole
                name: $(.params.role.name)
              subjects:
                - apiGroup: rbac.authorization.k8s.io
                  kind: User
                  name: $(.params.user)
    - name: Clear Rolebinding
      if: 'success() && params.delay != "0"'
      delay: 'params.delay'
      gitops:
        repo:
          {{ include "git-origin" . | nindent 10}}
          branch: 'expire-namespace-access-$(.run.id)'
        commit:
          email: '$(.user.email)'
          author: '$(.user.name)'
          message: 'chore(rbac): expire $(.params.user) $(.params.role.name) on $(.config.name)'

        {{ include "git-pr" (list . "expire $(.params.user) $(.params.role.name) on $(.config.name)" ) | nindent 8}}
        patches:
          - path: $(.git.kustomize.file)
            yq: .resources -= "del(.resources[] | select(. == "rolebinding-$(.config.name).yaml"))'"
        files:
          - path: '$(.git.kustomize.path)/rolebinding-$(.config.name)-$(run.id).yaml'
            content: '$delete'
{{- end}}
