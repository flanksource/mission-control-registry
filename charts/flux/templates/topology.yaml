apiVersion: canaries.flanksource.com/v1
kind: Topology
metadata:
  name: {{ .Values.topologyName }}
spec:
  icon: flux
  type: Topology
  schedule: "@every 5m"
  groupBy:
    tag: cluster
    selector:
      types:
        - Kubernetes::Kustomization
  components:
    - name: Controllers
      icon: pod
      selectors:
        - types:
            - Kubernetes::Pod
          labelSelector: 'namespace=flux-system'
    - name: Releases
      icon: helm
      components:
      - name: HelmReleases Component
        type: lookup
        lookup:
          catalog:
            - selector:
                - types: ['Kubernetes::HelmRelease']
              display:
                expr: |
                  dyn(results).map(r, {
                    'name': r.name,
                    'icon': 'helm',
                    'namespace': r.config.metadata.namespace,
                    'type': 'Kubernetes::HelmRelease',
                    'status': r.health,
                    'status_reason': r.description,
                    'config_id': r.id,
                    'health': r.health,
                    'selectors': [
                      {'labelSelector': 'helm.toolkit.fluxcd.io/name='+r.name + ',helm.toolkit.fluxcd.io/namespace='+r.config.metadata.namespace},
                      {'search': 'component_config_traverse=$(.self.id),outgoing type=Kubernetes::Pod'}
                    ],
                    'configs': [{'name': r.name, 'namespace': r.config.metadata.namespace, 'type': 'Kubernetes::HelmRelease'}],
                    'properties': [
                      {'name': 'Message', 'text': r.config.status.conditions[0].message},
                      {'name': 'Version', 'text': has(r.config.status.history) ? r.config.status.history[0].?chartVersion.orValue('') : '', 'headline': true},
                      {'name': 'Last attempted version', 'text': has(r.config.status.lastAttemptedRevision) ? r.config.status.lastAttemptedRevision : '', 'headline': true},
                    ],
                  }).toJSON()

    - name: Kustomizations
      icon: kustomize
      components:
      - name: Kustomizations Component
        type: lookup
        lookup:
          catalog:
            - selector:
                - types: ['Kubernetes::Kustomization']
              display:
                expr: |
                  dyn(results).map(r, {
                    'name': r.name,
                    'icon': 'kustomize',
                    'namespace': r.config.metadata.namespace,
                    'type': 'Kubernetes::Kustomization',
                    'status': r.health,
                    'status_reason': r.description,
                    'config_id': r.id,
                    'health': r.health,
                    'selectors': [
                      {'labelSelector': 'kustomize.toolkit.fluxcd.io/name='+r.name + ',kustomize.toolkit.fluxcd.io/namespace='+r.config.metadata.namespace},
                      {'search': 'component_config_traverse=$(.self.id),outgoing type=Kubernetes::Pod'}
                    ],
                    'configs': [{'name': r.name, 'namespace': r.config.metadata.namespace, 'type': 'Kubernetes::Kustomization'}],
                    'properties': [
                      {'name': 'Message', 'text': r.config.status.conditions[0].message},
                      {'name': 'State', 'text': r.config.status.conditions[0].type, 'headline': true},
                    ],
                  }).toJSON()

    - name: Repos
      icon: helm
      components:
      - name: HelmRepo Component
        type: lookup
        lookup:
          catalog:
            - selector:
                - types: ['Kubernetes::HelmRepository']
              display:
                expr: |
                  dyn(results).map(r, {
                    'name': r.name,
                    'icon': 'helm',
                    'namespace': r.config.metadata.namespace,
                    'type': 'Kubernetes::HelmRepository',
                    'status': r.health,
                    'status_reason': r.description,
                    'config_id': r.id,
                    'health': r.health,
                    'configs': [{'name': r.name, 'namespace': r.config.metadata.namespace, 'type': 'Kubernetes::HelmRepository'}],
                    'properties': [
                      {'name': 'Message', 'text': r.config.status.conditions[0].message},
                      {'name': 'State', 'text': r.config.status.conditions[0].type, 'headline': true},
                    ],
                  }).toJSON()

    - name: Git
      icon: git
      components:
      - name: GitRepo Component
        type: lookup
        lookup:
          catalog:
            - selector:
                - types: ['Kubernetes::GitRepository']
              display:
                expr: |
                  dyn(results).map(r, {
                    'name': r.name,
                    'icon': 'git',
                    'namespace': r.config.metadata.namespace,
                    'type': 'Kubernetes::GitRepository',
                    'status': r.health,
                    'config_id': r.id,
                    'status_reason': r.description,
                    'health': r.health,
                    'configs': [{'name': r.name, 'namespace': r.config.metadata.namespace, 'type': 'Kubernetes::GitRepository'}],
                    'properties': [
                      {'name': 'Message', 'text': r.config.status.conditions[0].message},
                      {'name': 'State', 'text': r.config.status.conditions[0].type, 'headline': true},
                    ],
                  }).toJSON()
