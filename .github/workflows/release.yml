name: Create Releases
on:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    outputs:
      # Expose matched filters as job 'packages' output variable
      charts: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            argocd: charts/argocd/**
            aws: charts/aws/**
            azure: charts/azure/**
            kubernetes: charts/kubernetes/**
            mission-control: charts/mission-control/**
            flux: charts/flux/**
            mongo-atlas: charts/mongo-atlas/**
            postgres: charts/postgres/**
            prometheus: charts/prometheus/**

  # Job to build and test each of modified packages
  build:
    needs: changes
    strategy:
      matrix:
        # Parse JSON array containing names of all filters matching any of changed files
        # e.g. ['package1', 'package2'] if both package folders contains changes
        chart: ${{ fromJSON(needs.changes.outputs.charts) }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: "${{ secrets.FLANKBOT }}"

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.12.0

      - name: Package Helm chart
        run: |
          cd charts/${{ matrix.chart }}
          NEW_CHART_VERSION=$(cat Chart.yaml | yq '.version' | awk -F. -v OFS=. '{print $1, $2, $3+1}')
          echo NEW_CHART_VERSION=$NEW_CHART_VERSION >> $GITHUB_ENV

          yq -i e ".version |= \"$NEW_CHART_VERSION\"" Chart.yaml
          helm package -d ../.. .

          git config --global user.name 'flankbot'
          git config --global user.email 'flankbot@users.noreply.github.com'
          git add Chart.yaml
          git commit -m "[skip ci] bump chart ${{matrix.chart}} to $NEW_CHART_VERSION"
          git push

      - name: Clone charts repo
        uses: actions/checkout@v3
        with:
          repository: "${{ github.repository_owner }}/charts"
          path: chart-index
          token: "${{ secrets.FLANKBOT }}"

      - name: Update chart repo
        run: |
          cd chart-index
          cp ../mission-control-*.tgz ./
          helm repo index --merge index.yaml .

      - name: Push changes to chart repo
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Release ${{ needs.semantic-release.outputs.release-version }} of mission-control-${{ matrix.chart }}"
          branch: gh-pages
          repository: ./chart-index

      - name: Clone mission-control-chart repo
        if: matrix.chart == 'mission-control'
        uses: actions/checkout@v3
        with:
          repository: "${{ github.repository_owner }}/mission-control-chart"
          path: mission-control-chart
          token: "${{ secrets.FLANKBOT }}"

      - name: Update mission-control-agent dependency
        if: matrix.chart == 'mission-control'
        run: |
          # mission-control chart needs to be updated as a dependency for mission-control-agent
          yq e '.dependencies[] |= select(.name == "mission-control-watchtower").version = env(NEW_CHART_VERSION)' -i ./mission-control-chart/agent-chart/Chart.yaml

          # We sleep for 120 seconds to allow charts repo to publish the mission-control-watchtower helm chart
          sleep 120

      - name: Push changes to chart repo
        uses: stefanzweifel/git-auto-commit-action@v4
        if: matrix.chart == 'mission-control'
        with:
          commit_message: "chore: bump mission-control-watchtower to ${{ env.NEW_CHART_VERSION }}"
          branch: main
          repository: ./mission-control-chart
