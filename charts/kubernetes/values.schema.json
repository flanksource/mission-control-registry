{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "clusterName": {
      "default": "kubernetes",
      "required": [],
      "title": "clusterName",
      "type": "string"
    },
    "fullnameOverride": {
      "default": "",
      "required": [],
      "title": "fullnameOverride"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "kubeconfig": {
      "$ref": "https://raw.githubusercontent.com/flanksource/duty/main/schema/openapi/scrape_config.schema.json#/$defs/EnvVar",
      "required": []
    },
    "labels": {
      "additionalProperties": true,
      "required": [],
      "title": "labels"
    },
    "metrics": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "queries": {
          "additionalProperties": false,
          "description": "queries to retrieve cpu/memory metrics for cluster/node/pod",
          "properties": {
            "gke": {
              "additionalProperties": false,
              "properties": {
                "cluster_cpu": {
                  "default": "sum(rate(kubernetes_io:container_cpu_core_usage_time{container_name!=\"\",cluster_name=\"{{.Values.metrics.queries.gke.cluster_name}}\"{{.Values.prometheus.labels}}}[5m]))",
                  "required": [],
                  "title": "cluster_cpu",
                  "type": "string"
                },
                "cluster_memory": {
                  "default": "sum(kubernetes_io:container_memory_used_bytes{cluster_name=\"{{.Values.metrics.queries.gke.cluster_name}}\"{{.Values.prometheus.labels}}})",
                  "required": [],
                  "title": "cluster_memory",
                  "type": "string"
                },
                "cluster_name": {
                  "default": "",
                  "required": [],
                  "title": "cluster_name",
                  "type": "string"
                },
                "namespace_cpu": {
                  "default": "sum(rate(label_replace(kubernetes_io:container_cpu_core_usage_time{container_name!=\"\",cluster_name=\"{{.Values.metrics.queries.gke.cluster_name}}\"{{.Values.prometheus.labels}}}, \"namespace\",\"$1\",\"namespace_name\", \"(.+)\")[5m])) by (namespace)",
                  "required": [],
                  "title": "namespace_cpu",
                  "type": "string"
                },
                "namespace_memory": {
                  "default": "sum(label_replace(kubernetes_io:container_memory_used_bytes{cluster_name=\"{{.Values.metrics.queries.gke.cluster_name}}\"{{.Values.prometheus.labels}}}, \"namespace\",\"$1\",\"namespace_name\", \"(.+)\")) by (namespace)",
                  "required": [],
                  "title": "namespace_memory",
                  "type": "string"
                },
                "node_cpu": {
                  "default": "sum(rate(label_replace(kubernetes_io:node_cpu_core_usage_time{cluster_name=\"{{.Values.metrics.queries.gke.cluster_name}}\"{{.Values.prometheus.labels}}}, \"node\",\"$1\",\"node_name\", \"(.+)\")[5m:])) by (node)",
                  "required": [],
                  "title": "node_cpu",
                  "type": "string"
                },
                "node_memory": {
                  "default": "sum(label_replace(kubernetes_io:container_memory_used_bytes{cluster_name=\"{{.Values.metrics.queries.gke.cluster_name}}\"{{.Values.prometheus.labels}}}, \"node\",\"$1\",\"node_name\", \"(.+)\")) by (node)",
                  "required": [],
                  "title": "node_memory",
                  "type": "string"
                },
                "node_storage": {
                  "default": "sum(label_replace(kubernetes_io:node_ephemeral_storage_used_bytes{cluster_name=\"{{.Values.metrics.queries.gke.cluster_name}}\"{{.Values.prometheus.labels}}},  \"node\",\"$1\",\"node_name\", \"(.+)\")) by (node)",
                  "required": [],
                  "title": "node_storage",
                  "type": "string"
                },
                "pod_cpu": {
                  "default": "sum(rate(label_replace(kubernetes_io:container_cpu_core_usage_time{container_name!=\"\",cluster_name=\"{{.Values.metrics.queries.gke.cluster_name}}\"{{.Values.prometheus.labels}}}, \"pod\",\"$1\",\"pod_name\", \"(.+)\")[5m:])) by (pod)",
                  "required": [],
                  "title": "pod_cpu",
                  "type": "string"
                },
                "pod_memory": {
                  "default": "sum(label_replace(kubernetes_io:container_memory_used_bytes{cluster_name=\"{{.Values.metrics.queries.gke.cluster_name}}\"{{.Values.prometheus.labels}}}, \"pod\",\"$1\",\"pod_name\", \"(.+)\")) by (pod)",
                  "required": [],
                  "title": "pod_memory",
                  "type": "string"
                }
              },
              "required": [
                "cluster_name",
                "cluster_cpu",
                "cluster_memory",
                "node_cpu",
                "node_memory",
                "node_storage",
                "pod_cpu",
                "pod_memory",
                "namespace_cpu",
                "namespace_memory"
              ],
              "title": "gke",
              "type": "object"
            },
            "prometheus": {
              "additionalProperties": false,
              "properties": {
                "cluster_cpu": {
                  "default": "1000 * sum(rate(container_cpu_usage_seconds_total{container!=\"\"{{.Values.prometheus.labels}}}[5m]))",
                  "required": [],
                  "title": "cluster_cpu",
                  "type": "string"
                },
                "cluster_memory": {
                  "default": "sum(container_memory_working_set_bytes{container!=\"\"{{.Values.prometheus.labels | default .Values.prometheusLabels}}})",
                  "required": [],
                  "title": "cluster_memory",
                  "type": "string"
                },
                "namespace_cpu": {
                  "default": "1000 * sum(rate(container_cpu_usage_seconds_total{container!=\"\"{{.Values.prometheus.labels | default .Values.prometheusLabels}}}[5m])) by (namespace)",
                  "required": [],
                  "title": "namespace_cpu",
                  "type": "string"
                },
                "namespace_memory": {
                  "default": "sum(container_memory_working_set_bytes{container!=\"\",pod!=\"\"{{.Values.prometheus.labels | default .Values.prometheusLabels}}} * on(pod, namespace) group_left kube_pod_status_phase{phase=\"Running\"{{.Values.prometheus.labels | default .Values.prometheusLabels}}} \u003e 0) by (namespace)",
                  "required": [],
                  "title": "namespace_memory",
                  "type": "string"
                },
                "node_cpu": {
                  "default": "1000 * sum(rate(container_cpu_usage_seconds_total{container!=\"\"{{.Values.prometheus.labels | default .Values.prometheusLabels}}}[5m])) by (node)",
                  "required": [],
                  "title": "node_cpu",
                  "type": "string"
                },
                "node_memory": {
                  "default": "sum(container_memory_working_set_bytes{container!=\"\",pod!=\"\"{{.Values.prometheus.labels | default .Values.prometheusLabels}}} * on(pod, namespace) group_left kube_pod_status_phase{phase=\"Running\"{{.Values.prometheus.labels | default .Values.prometheusLabels}}} \u003e 0) by (node)",
                  "required": [],
                  "title": "node_memory",
                  "type": "string"
                },
                "node_storage": {
                  "default": "max by (instance) (avg_over_time(node_filesystem_avail_bytes{mountpoint=\"/\",fstype!=\"rootfs\"{{.Values.prometheus.labels | default .Values.prometheusLabels}}}[5m]))",
                  "required": [],
                  "title": "node_storage",
                  "type": "string"
                },
                "pod_cpu": {
                  "default": "1000 * sum(rate(container_cpu_usage_seconds_total{container!=\"\"{{.Values.prometheus.labels | default .Values.prometheusLabels}}}[5m])) by (pod)",
                  "required": [],
                  "title": "pod_cpu",
                  "type": "string"
                },
                "pod_memory": {
                  "default": "sum(container_memory_working_set_bytes{container!=\"\"{{.Values.prometheus.labels | default .Values.prometheusLabels}}}) by (pod)",
                  "required": [],
                  "title": "pod_memory",
                  "type": "string"
                }
              },
              "required": [
                "cluster_cpu",
                "cluster_memory",
                "node_cpu",
                "node_memory",
                "node_storage",
                "pod_cpu",
                "pod_memory",
                "namespace_cpu",
                "namespace_memory"
              ],
              "title": "prometheus",
              "type": "object"
            }
          },
          "required": [
            "prometheus",
            "gke"
          ],
          "title": "queries",
          "type": "object"
        },
        "type": {
          "default": "prometheus",
          "enum": [
            "prometheus",
            "gke"
          ],
          "required": [],
          "title": "type"
        }
      },
      "required": [
        "enabled",
        "queries"
      ],
      "title": "metrics"
    },
    "nameOverride": {
      "default": "",
      "required": [],
      "title": "nameOverride"
    },
    "playbooks": {
      "additionalProperties": true,
      "deprecated": true,
      "required": [],
      "title": "playbooks"
    },
    "prometheus": {
      "additionalProperties": false,
      "properties": {
        "auth": {
          "$ref": "https://raw.githubusercontent.com/flanksource/duty/main/schema/openapi/connection.schema.json#/$defs/ConnectionPrometheus",
          "required": []
        },
        "connection": {
          "default": "prometheus",
          "required": [],
          "title": "connection"
        },
        "createConnection": {
          "default": "true",
          "required": [],
          "title": "createConnection"
        },
        "labels": {
          "default": "",
          "description": "prometheus labels to inject: \"\\,label1=key1\\,label2=key2\\,label3=~key3\"\nNote: comma(,) needs to be escaped as /, and prometheus.labels should always start with '/,' to work with existing labels",
          "required": [],
          "title": "labels"
        },
        "url": {
          "$ref": "https://raw.githubusercontent.com/flanksource/duty/main/schema/openapi/scrape_config.schema.json#/$defs/EnvVar",
          "required": []
        }
      },
      "required": [],
      "title": "prometheus"
    },
    "scraper": {
      "additionalProperties": false,
      "properties": {
        "defaultExclusions": {
          "$ref": "https://github.com/flanksource/duty/raw/main/schema/openapi/config_kubernetes.schema.json#/$defs/KubernetesExclusionConfig",
          "required": []
        },
        "defaultRelationships": {
          "items": {
            "$ref": "https://github.com/flanksource/duty/raw/main/schema/openapi/config_kubernetes.schema.json#/$defs/KubernetesRelationshipSelectorTemplate",
            "required": []
          },
          "required": [],
          "title": "defaultRelationships",
          "type": "array"
        },
        "defaultTransform": {
          "$ref": "https://github.com/flanksource/duty/raw/main/schema/openapi/config_kubernetes.schema.json#/$defs/Transform",
          "required": []
        },
        "defaultWatch": {
          "items": {
            "$ref": "https://github.com/flanksource/duty/raw/main/schema/openapi/config_kubernetes.schema.json#/$defs/KubernetesResourceToWatch",
            "required": []
          },
          "required": [],
          "title": "defaultWatch",
          "type": "array"
        },
        "event": {
          "$ref": "https://github.com/flanksource/duty/raw/main/schema/openapi/config_kubernetes.schema.json#/$defs/KubernetesEventConfig",
          "required": []
        },
        "exclusions": {
          "$ref": "https://github.com/flanksource/duty/raw/main/schema/openapi/config_kubernetes.schema.json#/$defs/KubernetesExclusionConfig",
          "required": []
        },
        "name": {
          "default": "kubernetes-{{ .Values.clusterName }}",
          "required": [],
          "title": "name"
        },
        "relationships": {
          "items": {
            "$ref": "https://github.com/flanksource/duty/raw/main/schema/openapi/config_kubernetes.schema.json#/$defs/KubernetesRelationshipSelectorTemplate",
            "required": []
          },
          "required": [],
          "title": "relationships",
          "type": "array"
        },
        "retention": {
          "additionalProperties": true,
          "properties": {
            "changes": {
              "items": {
                "$ref": "https://raw.githubusercontent.com/flanksource/duty/main/schema/openapi/scrape_config.schema.json#/$defs/ChangeRetentionSpec",
                "required": []
              },
              "required": [],
              "title": "changes",
              "type": "array"
            },
            "defaultChanges": {
              "items": {
                "$ref": "https://raw.githubusercontent.com/flanksource/duty/main/schema/openapi/scrape_config.schema.json#/$defs/ChangeRetentionSpec",
                "required": []
              },
              "required": [],
              "title": "defaultChanges",
              "type": "array"
            },
            "staleItemAge": {
              "default": "4h",
              "required": [],
              "title": "staleItemAge",
              "type": "string"
            }
          },
          "required": [
            "staleItemAge"
          ],
          "title": "retention"
        },
        "schedule": {
          "default": "@every 15m",
          "required": [],
          "title": "schedule"
        },
        "transform": {
          "$ref": "https://github.com/flanksource/duty/raw/main/schema/openapi/config_kubernetes.schema.json#/$defs/Transform",
          "required": []
        },
        "watch": {
          "description": "required: false",
          "items": {
            "$ref": "https://github.com/flanksource/duty/raw/main/schema/openapi/config_kubernetes.schema.json#/$defs/KubernetesResourceToWatch",
            "required": []
          },
          "required": [],
          "title": "watch",
          "type": "array"
        }
      },
      "required": [],
      "title": "scraper"
    },
    "topology": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": true,
          "required": [],
          "title": "enabled"
        },
        "groupBy": {
          "additionalProperties": false,
          "properties": {
            "selector": {
              "$ref": "https://raw.githubusercontent.com/flanksource/duty/main/schema/openapi/scrape_config.schema.json#/$defs/ResourceSelector",
              "required": []
            },
            "tag": {
              "default": "",
              "required": [],
              "title": "tag"
            }
          },
          "required": [],
          "title": "groupBy"
        },
        "icon": {
          "default": "kubernetes",
          "required": [],
          "title": "icon"
        },
        "ingress": {
          "additionalProperties": false,
          "properties": {
            "enableChecks": {
              "default": false,
              "required": [],
              "title": "enableChecks"
            },
            "enabled": {
              "default": true,
              "required": [],
              "title": "enabled"
            },
            "nameExpr": {
              "default": "r.config.spec.rules.size() \u003e 0 ? r.config.spec.rules[0].host : r.name",
              "required": [],
              "title": "nameExpr"
            }
          },
          "required": [],
          "title": "ingress"
        },
        "name": {
          "default": "{{ .Values.clusterName }}",
          "required": [],
          "title": "name"
        },
        "schedule": {
          "default": "@every 5m",
          "required": [],
          "title": "schedule"
        }
      },
      "required": [],
      "title": "topology"
    }
  },
  "required": [
    "clusterName"
  ],
  "type": "object"
}