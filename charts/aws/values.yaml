# yaml-language-server: $schema=values.schema.json
labels: {}

topology:
  name: aws
scraper:
  name: aws

connection: ""

# @schema
# required: false
# anyOf:
# - $ref: https://raw.githubusercontent.com/flanksource/duty/main/schema/openapi/scrape_config.schema.json#/$defs/EnvVar
# - type: null
# @schema
accessKey: null

# @schema
# required: false
# anyOf:
# - $ref: https://raw.githubusercontent.com/flanksource/duty/main/schema/openapi/scrape_config.schema.json#/$defs/EnvVar
# - type: null
# @schema
secretKey: null

# @schema
# description: AWS regions to pull from
# type: array
# @schema
region: []

# @schema
# description: Custom AWS endpoint e.g. for testing with LocalStack
# @schema
endpoint: ""

# @schema
# description: Name of an IAM role to assume
# @schema
assumeRole: ""

# @schema
# description: Skip TLS verification
# @schema
skipTLSVerify: false

# @schema
# type: object
# description: Views configuration
# @schema
views:
  enabled: true
  # @schema
  # required: false
  # description: Account Number
  # @schema
  account: ""
  # @schema
  # description: AWS Overview view configuration
  # @schema
  awsOverview:
    # @schema
    # description: Name of the AWS Overview view
    # @schema
    name: aws-overview
    # @schema
    # description: Title of the AWS Overview view
    # @schema
    title: AWS Overview
    # @schema
    # description: Enable the AWS Overview view
    # @schema
    enabled: true
    # @schema
    # description: Enable the sidebar for the AWS Overview view
    # @schema
    sidebar: true

# @schema
# type: object
# description: Import and correlate cloudtrail events with AWS resources
# @schema
cloudtrail:
  # @schema
  # description: Maximum lookback age when querying cloudtrail
  # @schema
  maxAge: 7d
  # @schema
  # type: array
  # description: list of events to to exclude
  # @schema
  exclude: []

# @schema
# description: Import AWS Config Rule failures as insights
# @schema
compliance: true

# @schema
# description: Scrape cost reports and match them with catalog items
# type: object
# @schema
costReporting:
  enabled: false
  database: ""
  region: ""
  s3BucketPath: ""
  table: ""

includeResources: []

excludeResources: []

# @schema
# type: object
# description: Transform configuration
# @schema
transform:
  changes:
    mapping:
      - filter: change.change_type == 'TerminateInstances'
        action: delete
      - filter: config_type == 'AWS::IAM::User' && change.change_type == 'diff' && change.summary == 'PasswordLastUsed'
        type: Login
    exclude:
      - change_type in ['AttachNetworkInterface', 'CreateNetworkInterface', 'DeregisterInstancesFromLoadBalancer', 'RegisterInstancesWithLoadBalancer','DetachLoadBalancerFromSubnets']
      - change_type == 'diff' &&  summary in ['AvailableIpAddressCount', 'ApproximateNumberOfMessages', 'RunningTasksCount', 'PendingTasksCount','ApproximateNumberOfMessagesNotVisible']
  relationship:
    - filter: config_type == 'AWS::EKS::Cluster'
      expr: |
        [
          {"type": "Kubernetes::Cluster", "labels": {"account": labels['account'], "eks-cluster-name": labels["alpha.eksctl.io/cluster-name"]}},
          {"type": "Kubernetes::Node", "labels": {"account": labels['account'], "alpha.eksctl.io/cluster-name": labels["alpha.eksctl.io/cluster-name"]}}
        ].toJSON()

    - filter: config_type == 'AWS::EC2:Instance'
      expr: |
        [{"type": "Kubernetes::Node", "labels": {"alpha.eksctl.io/instance-id": config["instance_id"]}}].toJSON()

    - filter: config_type == 'AWS::IAM::Role'
      expr: |
        [{"type": "Kubernetes::Node", "labels": {"aws/iam-role": config["Arn"]}}].toJSON()

    - filter: config_type == 'AWS::AvailabilityZone'
      expr: |
        [
          {"type": "Kubernetes::Node", "labels": {"account": labels['account'], "topology.kubernetes.io/zone": name}},
          {"type": "AWS::AvailabilityZoneID", "name": config["ZoneId"]}
        ].toJSON()

    - filter: config_type == 'AWS::Region'
      expr: |
        [{"type": "AWS::AvailabilityZoneID", "labels": {"region": name}}].toJSON()
