{{- if and .Values.views.enabled .Values.views.clusterOverview.enabled .Values.global.prometheus.connection }}
apiVersion: mission-control.flanksource.com/v1
kind: View
metadata:
  name: cluster-overview
  labels:
    {{- include "kubernetes-view.labels" . | nindent 4 }}
spec:
  display:
    title: Cluster
    icon: overview
    {{- if .Values.views.clusterOverview.sidebar }}
    sidebar: true
    {{- end }}
    plugins:
      - configTab:
          types:
            - Kubernetes::Cluster
  panels:
    - name: Resources
      description: Count of resources grouped by type
      type: table
      query: SELECT * FROM resource_count_by_type
    - name: CPU Usage
      type: gauge
      query: SELECT value FROM cpu_usage
      gauge:
        max: ".dataset.total_cpu[0].value"
        thresholds:
          - percent: 0
            color: '#28C19B'
          - percent: 70
            color: '#F4B23C'
          - percent: 85
            color: '#F25C54'
    - name: Memory Usage
      type: gauge
      query: SELECT value FROM memory_usage
      gauge:
        max: ".dataset.total_memory[0].value"
        unit: GB
        thresholds:
          - percent: 0
            color: '#28C19B'
          - percent: 70
            color: '#F4B23C'
          - percent: 85
            color: '#F25C54'
    - name: Pods Node Distribution
      description: Distribution of pods across nodes
      type: piechart
      piechart:
        showLabels: true
      query: SELECT value as "count", node FROM pods_node_distribution 
  queries:
    pods_node_distribution:
      prometheus:
        connection: {{ .Values.global.prometheus.connection }}
        query: |
          count(kube_pod_info) by (node)
    total_cpu:
      prometheus:
        connection: {{ .Values.global.prometheus.connection }}
        query: |
          sum(machine_cpu_cores{})
    cpu_usage:
      prometheus:
        connection: {{ .Values.global.prometheus.connection }}
        query: |
          sum(rate(node_cpu_seconds_total{mode!~"idle|iowait|steal", job="node-exporter"}[5m]))
    total_memory:
      prometheus:
        connection: {{ .Values.global.prometheus.connection }}
        query: |
          sum(kube_node_status_allocatable{resource="memory"}) / 1024 / 1024 / 1024
    memory_usage:
      prometheus:
        connection: {{ .Values.global.prometheus.connection }}
        query: |
          sum(node_memory_MemTotal_bytes{job="node-exporter"} - node_memory_MemAvailable_bytes{job="node-exporter"}) / 1024 / 1024 / 1024
    resource_count_by_type:
      prometheus:
        connection: {{ .Values.global.prometheus.connection }}
        query: |
          (label_replace(count(kube_node_info), "resource_type", "Nodes", "", "")) or 
          (label_replace(count(kube_namespace_status_phase{phase="Active"}), "resource_type", "Namespaces", "", "")) or 
          (label_replace(count(kube_pod_status_phase{phase="Running"}), "resource_type", "Running Pods", "", "")) or 
          (label_replace(count(kube_deployment_status_replicas), "resource_type", "Deployments", "", "")) or 
          (label_replace(count(kube_statefulset_status_replicas), "resource_type", "StatefulSets", "", "")) or 
          (label_replace(count(kube_daemonset_status_number_ready), "resource_type", "DaemonSets", "", "")) or 
          (label_replace(count(kube_persistentvolume_info), "resource_type", "Persistent Volumes", "", "")) or 
          (label_replace(count(kube_persistentvolumeclaim_info), "resource_type", "Persistent Volume Claims", "", "")) or 
          (label_replace(count(kube_ingress_info), "resource_type", "Ingresses", "", "")) or 
          (label_replace(count(kube_cronjob_info), "resource_type", "CronJobs", "", ""))
{{- end }}