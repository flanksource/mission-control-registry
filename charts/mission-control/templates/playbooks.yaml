{{- if .Values.playbooks}}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/flanksource/duty/main/schema/openapi/playbook.schema.json
apiVersion: mission-control.flanksource.com/v1
kind: Playbook
metadata:
  name: clear-event-queue
spec:
  parameters:
    - name: max_age
      label: Max Age (days)
      default: '30'
    - name: last_max_attempt
      label: Reset attempts where last tried is before (days)
      default: '7'
  title: Clear Event Queue
  category: Mission Control
  description: Deletes old events and fully retried events
  actions:
    - name: Delete stale events
      sql:
        connection: "connection://{{ .Values.connectionName }}"
        driver: postgres
        query: >-
          DELETE FROM event_queue
          WHERE created_at < NOW() - INTERVAL '$(.params.max_age) day'
    - name: Reset attempts
      sql:
        connection: "connection://{{ .Values.connectionName }}"
        driver: postgres
        query: >-
          UPDATE event_queue SET attempts = 0
          WHERE attempts > 0 AND
          last_attempt < NOW() - INTERVAL '$(.params.last_max_attempt) day'
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/flanksource/duty/main/schema/openapi/playbook.schema.json
apiVersion: mission-control.flanksource.com/v1
kind: Playbook
metadata:
  name: run-canary
spec:
  icon: Canary
  title: Run Canary
  description: Runs the canary on a canary-checker pod with configurable log level
  category: Mission Control
  configs:
    - types:
        - MissionControl::Canary
  parameters:
    - name: logLevel
      label: Log Level
      default: "-vvvvvvvvv"
      type: list
      properties:
        options:
          - label: info
            value: -v
          - label: debug
            value: -vv
          - label: trace
            value: -vvvvvvvvv
  actions:
    - name: Exec
      exec:
        connections:
          fromConfigItem: $(.config.id)
        script: |
          kubectl exec -i deploy/canary-checker -- sh -c '/app/canary-checker run - --namespace $(.config.tags.namespace) $(.params.logLevel)' <<"END"
          $(.config.config | toYAML)
          END
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/flanksource/duty/main/schema/openapi/playbook.schema.json
apiVersion: mission-control.flanksource.com/v1
kind: Playbook
metadata:
  name: vacuum-mission-control-tables
spec:
  icon: database
  title: Vacuum tables
  description: Vacuum mission control database tables to improve performance
  category: Mission Control
  parameters:
    - name: table
      label: Table
      type: list
      required: true
      properties:
        options:
          - value: checks
          - value: check_statuses
          - value: config_items
          - value: config_changes
          - value: config_relationships
  actions:
    - name: Vacuum
      sql:
        connection: "connection://{{ .Values.connectionName }}"
        driver: postgres
        query: 'VACUUM (FULL, ANALYZE) $(.table)'

{{- end }}
